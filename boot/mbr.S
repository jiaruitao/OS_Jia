;主引导程序
;----------------------------------------
SECTION MBR vstart=0x7c00		;告诉编译器，起始地址编译为0x7c00
	mov ax, cs
	mov ds, ax
	mov es, ax
	mov ss, ax
	mov fs, ax
	mov sp, 0x7c00				;栈指向0x7c00
	mov ax, 0xb800				;实模式中的显存分布中，文本模式显存地址为 0xb8000
	mov gs, ax

;清屏利用 0x06 号功能，上卷全部行，则可清屏
;------------------------------------------
; INT 0X10		功能号：0x06 	功能描述：上卷窗口
;------------------------------------------
; 输入: 
; AH 功能号 = 0x06
; AL = 上卷的行数，如果为 0 表示全部
; BH = 上卷行的属性
; (CL, CH) = 窗口左上角的(X,Y)的位置
; (DL, DH) = 窗口右下角的(X,Y)的位置

	mov ax, 0x600		; 功能号：0x06， 全部上卷
	mov bx, 0x700
	mov cx, 0			; 左上角 (0,0)		窗口大小为 25*80
	mov dx, 0x184f		; 右下角 (24,79)

	int 0x10					; 利用 BIOS 的 0x10 中断

; 直接往显存放入数据，一个字符占 2 个字节 =====================================
; 低字节放 ASCII 码，高字节放字符属性，如前景色、背景色、亮度、是否闪烁 =======
	mov byte [gs:0x00], 'O'				; 低字节，放 ASCII 
	mov byte [gs:0x01], 0x14			; 高字节放属性，蓝底红字，不闪烁
	
	mov byte [gs:0x02], 'S'
	mov byte [gs:0x03], 0x14
	
	mov byte [gs:0x04], '_'
	mov byte [gs:0x05], 0x14
	
	mov byte [gs:0x06], 'J'
	mov byte [gs:0x07], 0x14
	
	mov byte [gs:0x08], 'i'
	mov byte [gs:0x09], 0x14
	
	mov byte [gs:0x0a], 'a'
	mov byte [gs:0x0b], 0x14
	
; =============================================================================
	jmp $

	times 510-($ - $$) db 0	; 从当前行一直到 510 字节处填充 0 
	db 0x55, 0xaa		; 魔数
	
	