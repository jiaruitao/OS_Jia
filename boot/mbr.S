;主引导程序
;----------------------------------------
SECTION MBR vstart=0x7c00		;告诉编译器，起始地址编译为0x7c00
	mov ax, cs
	mov ds, ax
	mov es, ax
	mov ss, ax
	mov fs, ax
	mov sp, 0x7c00				;栈指向0x7c00

;清屏利用 0x06 号功能，上卷全部行，则可清屏
;------------------------------------------
; INT 0X10		功能号：0x06 	功能描述：上卷窗口
;------------------------------------------
; 输入: 
; AH 功能号 = 0x06
; AL = 上卷的行数，如果为 0 表示全部
; BH = 上卷行的属性
; (CL, CH) = 窗口左上角的(X,Y)的位置
; (DL, DH) = 窗口右下角的(X,Y)的位置

	mov ax, 0x600		; 功能号：0x06， 全部上卷
	mov bx, 0x700
	mov cx, 0			; 左上角 (0,0)		窗口大小为 25*80
	mov dx, 0x184f		; 右下角 (24,79)

	int 0x10					; 利用 BIOS 的 0x10 中断

; 获取光标位置 ===============================================
	mov ah, 3			; 功能号：0x03
	mov bh, 0			; 待获取光标的页号
	
	int 0x10			; 输出: ch = 光标开始行， cl = 光标结束行， dh = 光标所在行号， dl = 光标所在列号

; 打印字符串 =================================================
	mov dx, 0
	mov ax, message
	mov bp, ax			; es:bp 为串首地址，es 此时和 cs 一致
	mov cx, 6			; 为字符长度
	mov ax, 0x1301		; 功能号：0x13	al=0x1 显示字符串，并且光标跟随到新位置
	mov bx, 0x17			; bh 存储要显示的页号，第0页	bl：字符属性 0x17为蓝底白字
	int 0x10
	
; ============================================================	
	jmp $
	
	message db "OS_Jia"
	times 510-($ - $$) db 0	; 从当前行一直到 510 字节处填充 0 
	db 0x55, 0xaa		; 魔数
	
	